// eventListener = Listen for specific events to create interactive web pages
//                             events: keydown, keyup, keypress
//                             document.addEventListener(event, callback);


// Láº¯ng nghe sá»± kiá»‡n = Láº¯ng nghe má»™t sá»± kiá»‡n cá»¥ thá»ƒ Ä‘Æ°á»£c táº¡o bá»›i cÃ¡c tÆ°Æ¡ng tÃ¡c trÃªn trang web.
// Sá»± kiá»‡n bao gá»“m: click, mouseover, mouseout,...
// addEventListener(event, callback) - addEventListener lÃ  1 function, nháº­n vÃ o sá»± kiá»‡n vÃ  1 callback

// Nháº¥n xuá»‘ng kÃ­ch hoáº¡t sá»± kiá»‡n
// document.addEventListener("keydown", (e) => {
//     // console.log(e) // in ra Ä‘áº§y Ä‘á»§
//     // // vÃ­ dá»¥: Nháº¥n "a" thÃ¬ -> key code: 81 vÃ  key: "a"
//     // console.log(e.key) // In ra má»—i cÃ¡i thÃ´ng tin key
//     // console.log(e.keyCode) // In ra má»—i cÃ¡i thÃ´ng tin key Code
//     console.log(`key down: ${e.key}`)
// })

// // Nháº¥n xuá»‘ng rá»“i tháº£ ra thÃ¬ kÃ­ch hoáº¡t sá»± kiá»‡n khi mÃ  tháº£ ra 
// document.addEventListener("keyup", (e) => {
//     console.log(`key up: ${e.key}`)
// })


// const myBox = document.getElementById("myBox");

// document.addEventListener("keydown", (e) => {
//     myBox.textContent = "ðŸ˜²"
//     myBox.style.backgroundColor = "tomato"
// })

// document.addEventListener("keyup", (e) => {
//     myBox.textContent = "ðŸ˜€"
//     myBox.style.backgroundColor = "lightblue"
// })


const myBox = document.getElementById("myBox");
const moveAmount = 10; // bÆ°á»›c nháº£y
let x = 0;
let y = 0;

document.addEventListener("keydown", (e) => {
    myBox.textContent = "ðŸ˜²"
    myBox.style.backgroundColor = "tomato"
})

document.addEventListener("keyup", (e) => {
    myBox.textContent = "ðŸ˜€"
    myBox.style.backgroundColor = "lightblue"
})
document.addEventListener("keydown", (e) => {
    // console.log(e.key)
    e.preventDefault(); // giÃºp há»§y cÃ¡i sá»± kiá»‡n máº·c Ä‘á»‹nh cá»§a tháº» Ä‘Ã³
    if(e.key.startsWith("Arrow")){
        switch(e.key) {
            case "ArrowUp":
                y -= moveAmount;
                break;
            case "ArrowDown":
                y += moveAmount;
                break;
            case "ArrowLeft":
                x -= moveAmount;
                break;
            case "ArrowRight":
                x += moveAmount;
                break;
        }

        myBox.style.top = `${y}px`;
        myBox.style.left = `${x}px`;
    }
})

